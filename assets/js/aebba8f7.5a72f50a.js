"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4883],{3111:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var s=o(4848),i=o(8453);const t={sidebar_position:7,title:"Model Options"},r="Model Options",d={id:"options",title:"Model Options",description:"The Model Options object is used to configure a model's behavior in Mercury. It includes settings like enabling history tracking and adding MongoDB indexes to optimize queries.",source:"@site/docs/options.md",sourceDirName:".",slug:"/options",permalink:"/mercury-js/docs/options",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/options.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Model Options"},sidebar:"tutorialSidebar",previous:{title:"Fields",permalink:"/mercury-js/docs/fields"},next:{title:"Hooks",permalink:"/mercury-js/docs/hook"}},l={},c=[{value:"1. HistoryTracking",id:"1-historytracking",level:2},{value:"Example",id:"example",level:3},{value:"2. Indexes",id:"2-indexes",level:2},{value:"Example",id:"example-1",level:3},{value:"3. Additional Mongoose Options",id:"3-additional-mongoose-options",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"model-options",children:"Model Options"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Model Options"})," object is used to configure a model's behavior in Mercury. It includes settings like enabling history tracking and adding MongoDB indexes to optimize queries."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export type ModelOptions = {\n  historyTracking: boolean;\n  indexes?: Array<TIndex>;\n  [x: string]: any;\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"1-historytracking",children:"1. HistoryTracking"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Type"})})}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Description"})})}),": If historyTracking is set to true, the system will automatically track the creation, update, and deletion events of the model. This feature is essential for audit logs or for maintaining a version history of records."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const userModel = mercury.createModel('User', fields, {\n  historyTracking: true,\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-indexes",children:"2. Indexes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Type"})})}),": ",(0,s.jsx)(n.code,{children:"Array< TIndex >"})," (optional)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Description"})})}),": This field defines an array of MongoDB indexes that can be applied to the model. Mercury works with indexes in the same way as Mongoose. You can use all Mongoose indexes here, including compound indexes, unique indexes, and more. The default index functionality of Mercury  can also be used."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For further details on MongoDB indexes(",(0,s.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/indexes/",children:"https://www.mongodb.com/docs/manual/indexes/"}),") and how they can be used to optimize queries, refer to the official MongoDB Index Documentation."]}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const userModel = mercury.createModel('User', fields, {\n  indexes: [\n    { fields: { email: 1 }, options: { unique: true } },  // Unique index on email\n    { fields: { age: -1 } },  // Standard index on age\n  ],\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-additional-mongoose-options",children:"3. Additional Mongoose Options"}),"\n",(0,s.jsxs)(n.p,{children:["In addition to the Mercury-specific options, you can pass any other Mongoose-supported schema options directly to the ",(0,s.jsx)(n.code,{children:"options"})," object. This flexibility allows you to fine-tune your model's behavior using the full range of Mongoose features."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, you could add options like ",(0,s.jsx)(n.code,{children:"timestamps"}),", ",(0,s.jsx)(n.code,{children:"strict"}),", or ",(0,s.jsx)(n.code,{children:"toJSON"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const userModel = mercury.createModel('User', fields, {\n  historyTracking: true,\n  timestamps: true,\n  strict: false,\n  toJSON: { virtuals: true }\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"These additional options will be passed directly to Mongoose when creating the model."}),"\n",(0,s.jsxs)(n.p,{children:["For a comprehensive list of all available Mongoose schema options and their descriptions, please refer to the ",(0,s.jsx)(n.a,{href:"https://mongoosejs.com/docs/guide.html#options",children:"Mongoose Schema Options documentation"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>d});var s=o(6540);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);