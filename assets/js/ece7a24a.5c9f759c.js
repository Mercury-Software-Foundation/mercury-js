"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6471],{5340:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=s(4848),t=s(8453);const i={sidebar_position:4,title:"Models"},l=void 0,d={id:"model",title:"Models",description:"Mercury Models: Defining Your Data Structure",source:"@site/docs/model.md",sourceDirName:".",slug:"/model",permalink:"/mercury-js/docs/model",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/model.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Models"},sidebar:"tutorialSidebar",previous:{title:"Getting started with Express",permalink:"/mercury-js/docs/express"},next:{title:"Profiles",permalink:"/mercury-js/docs/profiles"}},c={},o=[{value:"Mercury Models: Defining Your Data Structure",id:"mercury-models-defining-your-data-structure",level:2},{value:"<code>mercury.createModel</code>",id:"mercurycreatemodel",level:3},{value:"Field Types",id:"field-types",level:3},{value:"Field Options",id:"field-options",level:3},{value:"Model Options",id:"model-options",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"mercury-models-defining-your-data-structure",children:"Mercury Models: Defining Your Data Structure"}),"\n",(0,r.jsx)(n.p,{children:"In Mercury, models act as the blueprints for your data. They define the shape and structure of your data, and they translate directly into Mongoose schemas and GraphQL types."}),"\n",(0,r.jsx)(n.h3,{id:"mercurycreatemodel",children:(0,r.jsx)(n.code,{children:"mercury.createModel"})}),"\n",(0,r.jsx)(n.p,{children:"This is the core function for creating a model. It takes three arguments:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"modelName"})}),": A string representing the name of your model (e.g., 'User', 'Product')."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"schema"})}),": An object where the keys are the field names, and the values are objects defining the field types and options."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"options"})}),": An object for additional model-level options (e.g., timestamps, collection name)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"field-types",children:"Field Types"}),"\n",(0,r.jsx)(n.p,{children:"Mercury supports a variety of field types to accommodate different data needs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"string"})}),": For text data."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"title: { type: 'string', required: true },\ndescription: { type: 'string' }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"number"})}),": For numerical data."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"price: { type: 'number' },\nquantity: { type: 'number', default: 0 }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"boolean"})}),": For true/false values."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"isActive: { type: 'boolean', default: true }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"date"})}),": For storing dates and times."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"createdAt: { type: 'date' },\ndueDate: { type: 'date' }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"relationship"})}),": To establish connections between models."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"author: { type: 'relationship', ref: 'User' }, // Many-to-one\ncomments: { type: 'relationship', ref: 'Comment', many: true } // One-to-many\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"enum"})}),": To restrict a field's values to a predefined set."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"status: {\n  type: 'enum',\n  values: ['pending', 'in-progress', 'completed']\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"array"})}),": To store a list of values of a single type."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"tags: { type: 'array', of: 'string' }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"object"})}),": To store nested data structures"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"address: {\n  type: 'object',\n  of: {\n    street: { type: 'string' },\n    city: { type: 'string' },\n    zipcode: { type: 'string' }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"virtual"})}),": To define computed fields that are not stored in the database."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"fullName: {\n  type: 'virtual',\n  ref: 'User',\n  localField: '_id',\n  foreignField: 'userId',\n  justOne: true,\n  get: (user) => `${user.firstName} ${user.lastName}`\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"mixed"})}),": Used when the type of data is not known beforehand or can vary"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"metadata: {\n  type: 'mixed';\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"field-options",children:"Field Options"}),"\n",(0,r.jsx)(n.p,{children:"You can further customize fields with these options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"required"})}),": Makes the field mandatory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"unique"})}),": Ensures that each value for this field is unique across all documents in the collection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"default"})}),": Sets a default value if none is provided."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"index"})}),": Creates an index on the field for faster queries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"select"})}),": Controls whether the field is included in query results by default"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"autopopulate"})}),": Automatically populates the referenced document when querying the parent document."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"get"})}),": A function to compute the value of a virtual field"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"model-options",children:"Model Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"timestamps"})}),": Automatically adds ",(0,r.jsx)(n.code,{children:"createdAt"})," and ",(0,r.jsx)(n.code,{children:"updatedAt"})," fields."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"collection"})}),": Specifies a custom collection name in the database"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear Naming:"})," Use descriptive names for models and fields."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Relationships:"})," Leverage relationships to model connections between data entities."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enums:"})," Use enums for fields with a limited set of possible values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Virtual Fields:"})," Define virtual fields for computed or derived data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Indexes:"})," Strategically add indexes to improve query performance on frequently accessed fields."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Validation:"})," Consider adding custom validation logic using Mongoose validators or Mercury hooks"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import mercury from '@mercury-js/core';\n\nexport const BlogPost = mercury.createModel(\n  'BlogPost',\n  {\n    title: { type: 'string', required: true },\n    content: { type: 'string' },\n    status: { type: 'enum', values: ['draft', 'published'], default: 'draft' },\n    author: { type: 'relationship', ref: 'User', autopopulate: true },\n    tags: { type: 'array', of: 'string' },\n    publishedAt: { type: 'date', index: true },\n    views: { type: 'number', default: 0 },\n  },\n  {\n    timestamps: true,\n  }\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"By understanding and utilizing Mercury's models and field types effectively, you'll be well-equipped to build robust and scalable APIs for your applications!"}),"\n",(0,r.jsx)(n.p,{children:"Let me know if you'd like a deeper dive into a specific aspect or feature!"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);