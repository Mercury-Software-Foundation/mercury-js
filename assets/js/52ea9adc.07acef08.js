"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7965],{5459:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var s=r(4848),o=r(8453);const t={sidebar_position:1,title:"Todo App with Next.js App Router and Mercury API"},i=void 0,c={id:"Examples/todo-app",title:"Todo App with Next.js App Router and Mercury API",description:"Let's craft a Todo App with Next.js App Router and Mercury API, incorporating features like custom lists, completed tasks, and user-specific access control.",source:"@site/docs/Examples/todo-app.md",sourceDirName:"Examples",slug:"/Examples/todo-app",permalink:"/mercury-js/docs/Examples/todo-app",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Examples/todo-app.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Todo App with Next.js App Router and Mercury API"},sidebar:"tutorialSidebar",previous:{title:"Hooks",permalink:"/mercury-js/docs/hook"}},l={},d=[];function a(e){const n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Let's craft a Todo App with Next.js App Router and Mercury API, incorporating features like custom lists, completed tasks, and user-specific access control."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. Setting Up Your Next.js Project"})}),"\n",(0,s.jsx)(n.p,{children:"Start by scaffolding a Next.js project with the App Router enabled:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx create-next-app@latest --experimental-app\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Install Mercury and Dependencies"})}),"\n",(0,s.jsx)(n.p,{children:"Integrate Mercury into your project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @mercury-js/core mongoose graphql graphql-middleware @apollo/server @as-integrations/next @graphql-tools/schema\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"3. Project Structure"})}),"\n",(0,s.jsx)(n.p,{children:"Organize your project with a focus on clarity:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"todo-app/\n  app/\n    api/\n      mercury/\n        route.ts\n    (your page components)\n  models/\n    index.ts\n    Todo.model.ts\n    TodoList.model.ts\n  profiles/\n    index.ts\n    User.profile.ts\n  hooks/\n    index.ts\n    Todo.hook.ts\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"4. Crafting the Mercury API (route.ts)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Import and Connect:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import mercury from '@mercury-js/core';\nimport { startServerAndCreateNextHandler } from '@as-integrations/next';\nimport { ApolloServer } from '@apollo/server';\nimport { makeExecutableSchema } from '@graphql-tools/schema';\nimport { applyMiddleware } from 'graphql-middleware';\nimport './models';\nimport './profiles';\nimport './hooks';\n\nmercury.connect(process.env.DB_URL || 'mongodb://localhost:27017/mercury');\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Set up the GraphQL Server:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const schema = applyMiddleware(\n  makeExecutableSchema({\n    typeDefs: mercury.typeDefs,\n    resolvers: mercury.resolvers as unknown as IResolvers<\n      any,\n      GraphQLResolveInfo\n    >[],\n  })\n);\n\nconst server = new ApolloServer({\n  schema,\n});\n\nconst handler = startServerAndCreateNextHandler(server, {\n  context: async (req, res) => ({\n    ...req,\n    user: {\n      id: '1', // Replace with actual user authentication logic\n      profile: 'User',\n    },\n  }),\n});\n\nexport async function GET(request: any) {\n  return handler(request);\n}\n\nexport async function POST(request: any) {\n  return handler(request);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"5. Define Data Models (models/)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Todo.model.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import mercury from '@mercury-js/core';\n\nexport const Todo = mercury.createModel(\n  'Todo',\n  {\n    title: { type: 'string', required: true },\n    description: { type: 'string' },\n    completed: { type: 'boolean', default: false },\n    list: {\n      type: 'relationship',\n      ref: 'TodoList',\n      required: true,\n    },\n    createdBy: {\n      type: 'relationship',\n      ref: 'User',\n      autopopulate: true,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"TodoList.model.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import mercury from '@mercury-js/core';\n\nexport const TodoList = mercury.createModel(\n  'TodoList',\n  {\n    name: { type: 'string', required: true },\n    isCustom: { type: 'boolean', default: false },\n    createdBy: {\n      type: 'relationship',\n      ref: 'User',\n      autopopulate: true,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"index.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export { Todo } from './Todo.model';\nexport { TodoList } from './TodoList.model';\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"6. Establish User Profiles (profiles/)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"User.profile.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import mercury from '@mercury-js/core';\n\nconst rules = [\n  {\n    modelName: 'Todo',\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n    // Only allow access to own todos\n    recordLevelAccess: true,\n    getRecordQuery: (user) => ({ createdBy: user.id }),\n  },\n  {\n    modelName: 'TodoList',\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n    // Only allow access to own lists\n    recordLevelAccess: true,\n    getRecordQuery: (user) => ({ createdBy: user.id }),\n  },\n];\n\nexport const UserProfile = mercury.createProfile('User', rules);\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"index.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export { UserProfile } from './User.profile';\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"7. Implement Hooks for Custom Logic (hooks/)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Todo.hook.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { hook } from '@mercury-js/core';\n\n// Example: Prevent completing todos in a custom list\nhook.before('UPDATE_TODO_RECORD', async function (this: any) {\n  if (this.data.completed && this.record.list.isCustom) {\n    throw new Error('Cannot complete todos in a custom list');\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"index.ts"})})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export { default as TodoHook } from './Todo.hook';\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"8. Build Your Next.js Pages"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Leverage Apollo Client to interact with your Mercury-powered GraphQL API."}),"\n",(0,s.jsxs)(n.li,{children:["Structure your app with components for:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Todo list display"}),"\n",(0,s.jsx)(n.li,{children:"Adding new todos"}),"\n",(0,s.jsx)(n.li,{children:"Marking todos as complete"}),"\n",(0,s.jsx)(n.li,{children:"Creating and managing custom lists"}),"\n",(0,s.jsx)(n.li,{children:"Viewing completed tasks"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Example Page Component (using ",(0,s.jsx)(n.code,{children:"react-query"})," for data fetching)"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"'use client';\n\nimport { useQuery, useMutation } from 'react-query';\nimport { gql } from '@apollo/client';\nimport { mercuryInstance } from '@/app/api/mercury/route';\n\nconst GET_TODOS = gql`\n  query GetTodos {\n    listTodo {\n      _id\n      title\n      completed\n    }\n  }\n`;\n\nconst Todos = () => {\n  const { data, isLoading, error } = useQuery('todos', async () => {\n    const result = await mercuryInstance.graphql(GET_TODOS);\n    return result.data.listTodo;\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error.message}</div>;\n\n  return (\n    <ul>\n      {data.map((todo) => (\n        <li key={todo._id}>\n          {todo.title} - {todo.completed ? 'Completed' : 'Pending'}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Todos;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Remember"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Replace placeholders (",(0,s.jsx)(n.code,{children:"'1'"}),") with your actual user authentication logic."]}),"\n",(0,s.jsx)(n.li,{children:"Tailor your frontend components and styling to your preferences."}),"\n",(0,s.jsx)(n.li,{children:"Consider additional features like filtering, sorting, and due dates."}),"\n",(0,s.jsx)(n.li,{children:"Explore Mercury's extensive capabilities (virtual fields, plugins) for advanced use cases."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(6540);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);