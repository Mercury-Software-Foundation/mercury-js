"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4497],{5483:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>t});var l=n(4848),r=n(8453);const i={sidebar_position:5,title:"Profiles"},o=void 0,c={id:"profiles",title:"Profiles",description:"Mercury.js: Defining Access Control for Models and Fields",source:"@site/docs/profiles.md",sourceDirName:".",slug:"/profiles",permalink:"/mercury-js/docs/profiles",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/profiles.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Profiles"},sidebar:"tutorialSidebar",previous:{title:"Models",permalink:"/mercury-js/docs/model"},next:{title:"Mercury",permalink:"/mercury-js/docs/mercury"}},d={},t=[{value:"Mercury.js: Defining Access Control for Models and Fields",id:"mercuryjs-defining-access-control-for-models-and-fields",level:2},{value:"Access Control Levels",id:"access-control-levels",level:3},{value:"Profile Syntax",id:"profile-syntax",level:3},{value:"Creating a Profile",id:"creating-a-profile",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Rule Structure",id:"rule-structure",level:3},{value:"Access Control Actions",id:"access-control-actions",level:3},{value:"Model-Level Access Example",id:"model-level-access-example",level:3},{value:"Updating an Existing Profile",id:"updating-an-existing-profile",level:3},{value:"Example",id:"example",level:3},{value:"Extending an Existing Profile",id:"extending-an-existing-profile",level:3},{value:"Example",id:"example-1",level:3},{value:"Default Access Behavior",id:"default-access-behavior",level:3},{value:"Explanation of Access Permissions",id:"explanation-of-access-permissions",level:3},{value:"Flexible Access Control",id:"flexible-access-control",level:3},{value:"Sharing Rules",id:"sharing-rules",level:3},{value:"Field-Level Access Control",id:"field-level-access-control",level:3}];function a(e){const s={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.h2,{id:"mercuryjs-defining-access-control-for-models-and-fields",children:"Mercury.js: Defining Access Control for Models and Fields"}),"\n",(0,l.jsx)(s.p,{children:"Mercury.js provides a powerful mechanism for defining access control rules for your application's data models. This feature allows you to specify what actions users can perform on a particular model or individual fields within a model. Access control is managed through profiles, which can be assigned to actors in your system, thus governing their permissions."}),"\n",(0,l.jsx)(s.h3,{id:"access-control-levels",children:"Access Control Levels"}),"\n",(0,l.jsx)(s.p,{children:"Mercury.js offers access control at two levels:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Model Level"})}),": Controls access to an entire model, specifying permissions like creating, reading, updating, or deleting records."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Field Level"})}),": Allows for more granular control by specifying access permissions for individual fields within a model."]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"Each model or field can have the following access permissions:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Create"})}),": Permission to add new records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Read"})}),": Permission to view existing records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Update"})}),": Permission to modify existing records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Delete"})}),": Permission to remove records or values."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"profile-syntax",children:"Profile Syntax"}),"\n",(0,l.jsxs)(s.p,{children:["To define access control rules, use the ",(0,l.jsx)(s.code,{children:"mercury.access.createProfile"})," method. This method takes two parameters:"]}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Profile Name"}),": The name of the profile (e.g., ",(0,l.jsx)(s.code,{children:"ADMIN"}),", ",(0,l.jsx)(s.code,{children:"USER"}),", ",(0,l.jsx)(s.code,{children:"ANONYMOUS"}),")."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Rules"}),": A list of access rules for each model."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"creating-a-profile",children:"Creating a Profile"}),"\n",(0,l.jsx)(s.h4,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:"export const Profile = mercury.access.createProfile(profileName: string, rules: Rule[]);\n"})}),"\n",(0,l.jsx)(s.h3,{id:"rule-structure",children:"Rule Structure"}),"\n",(0,l.jsxs)(s.p,{children:["Each rule in the ",(0,l.jsx)(s.code,{children:"rules"})," array should follow this structure:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:"type TAction = 'create' | 'read' | 'update' | 'delete';\n\ntype Rule = {\n  modelName: string;\n  access: {\n    [TAction: string]: boolean; // Uses TAction as keys (create, read, update, delete)\n  };\n  fieldLevelAccess?: boolean;\n  fields?: {\n    [fieldName: string]: {\n      [TAction: string]: boolean; // Also uses TAction as keys for field-level control\n    };\n  };\n  sharingRules?: 'PRIVATE' | 'PUBLIC_READ' | 'PUBLIC_READ_WRITE';\n};\n"})}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"modelName"}),": The name of the model this rule applies to."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"access"}),": An object defining model-level access permissions. The keys are from the ",(0,l.jsx)(s.code,{children:"TAction"})," type, representing create, read, update, and delete actions."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"fieldLevelAccess"})," (optional): A boolean indicating if field-level access control is enabled."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"fields"})," (optional): An object defining field-level access permissions. For each field, the permissions use the same ",(0,l.jsx)(s.code,{children:"TAction"})," keys as the model-level access."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"sharingRules"})," (optional): Defines the sharing behavior for the model."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"access-control-actions",children:"Access Control Actions"}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"TAction"})," type defines the possible actions for access control:"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"create"}),": Permission to add new records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"read"}),": Permission to view existing records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"update"}),": Permission to modify existing records or values."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"delete"}),": Permission to remove records or values."]}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["These actions are used as keys in both the ",(0,l.jsx)(s.code,{children:"access"})," object for model-level permissions and in each field's permission object for field-level access control. This allows for consistent and granular control over data operations at both levels."]}),"\n",(0,l.jsx)(s.h3,{id:"model-level-access-example",children:"Model-Level Access Example"}),"\n",(0,l.jsx)(s.p,{children:"Here's an example of how to define different profiles with access control for a model level:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:'import mercury from "@mercury-js/core";\n\nconst rules = [\n  {\n    modelName: "Document",\n    access: {\n      create: true,\n      read: true,\n      update: false,\n      delete: false,\n    },\n    fields: {\n      title: {\n        create: true,\n        read: true,\n        update: false,\n      },\n      content: {\n        create: true,\n        read: true,\n        update: false,\n      },\n    },\n  },\n];\n\n// Create profiles\nexport const AdminProfile = mercury.access.createProfile("ADMIN", [\n  {\n    modelName: "Document",\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n  },\n]);\n\nexport const UserProfile = mercury.access.createProfile("USER", rules);\n\nexport const AnonymousProfile = mercury.access.createProfile("ANONYMOUS", [\n  {\n    modelName: "Document",\n    access: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n    },\n  },\n]);\n'})}),"\n",(0,l.jsx)(s.h3,{id:"updating-an-existing-profile",children:"Updating an Existing Profile"}),"\n",(0,l.jsx)(s.p,{children:"To update the rules of an existing profile, use the updateProfile method. This method takes two parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Profile Name"})})}),": The name of the profile you want to update."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Rules"})})}),": The new list of access rules for the profile."]}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:"updateProfile(name: string, rules: Rule[]): void;\n\n"})}),"\n",(0,l.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:'// Update the AdminProfile with new rules\nmercury.access.updateProfile("ADMIN", [\n  {\n    modelName: "Document",\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n    fields: {\n      title: {\n        create: true,\n        read: true,\n        update: true,\n      },\n      content: {\n        create: true,\n        read: true,\n        update: true,\n      },\n    },\n  },\n]);\n\n'})}),"\n",(0,l.jsx)(s.h3,{id:"extending-an-existing-profile",children:"Extending an Existing Profile"}),"\n",(0,l.jsx)(s.p,{children:"To extend the rules of an existing profile, use the extendProfile method. This method takes two parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Profile Name"})})}),": The name of the profile you want to extend."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Rules"})})}),": The additional rules you want to add to the profile."]}),"\n"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:"extendProfile(name: string, rules: Rule[]): void;\n\n"})}),"\n",(0,l.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:'// Extend the UserProfile with additional rules\nmercury.access.extendProfile("USER", [\n  {\n    modelName: "Document",\n    fields: {\n      summary: {\n        create: false,\n        read: true,\n        update: false,\n      },\n    },\n  },\n]);\n\n'})}),"\n",(0,l.jsx)(s.h3,{id:"default-access-behavior",children:"Default Access Behavior"}),"\n",(0,l.jsx)(s.p,{children:"If field-level access is not specified for a model, the default permissions applied are those defined at the model level. This means that any permissions not explicitly set at the field level will inherit the model-level permissions."}),"\n",(0,l.jsxs)(s.p,{children:["For example, if the ",(0,l.jsx)(s.code,{children:"Document"})," model has permissions set for ",(0,l.jsx)(s.code,{children:"create"}),", ",(0,l.jsx)(s.code,{children:"read"}),", ",(0,l.jsx)(s.code,{children:"update"}),", and ",(0,l.jsx)(s.code,{children:"delete"}),", but no specific field-level permissions are defined for ",(0,l.jsx)(s.code,{children:"title"})," or ",(0,l.jsx)(s.code,{children:"content"}),", the model-level permissions will apply to these fields by default."]}),"\n",(0,l.jsx)(s.h3,{id:"explanation-of-access-permissions",children:"Explanation of Access Permissions"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Create"})}),": Allows the creation of new records or fields."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Read"})}),": Allows the viewing of records or fields."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Update"})}),": Allows the modification of existing records or fields."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Delete"})}),": Allows the removal of records or fields."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"flexible-access-control",children:"Flexible Access Control"}),"\n",(0,l.jsx)(s.p,{children:"Mercury.js provides flexibility to:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Control Access at the Model Level"})})}),": Define access for entire models."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.em,{children:(0,l.jsx)(s.strong,{children:(0,l.jsx)(s.code,{children:"Control Access at the Field Level"})})}),": Specify permissions for individual fields within a model."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"sharing-rules",children:"Sharing Rules"}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"sharingRules"})," property in a rule allows you to define the sharing behavior for a model:"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"'PRIVATE'"}),": The model is only accessible to the owner or users with explicit permissions."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"'PUBLIC_READ'"}),": The model can be read by anyone, but only modified by the owner or users with explicit permissions."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"'PUBLIC_READ_WRITE'"}),": The model can be read and modified by anyone."]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"field-level-access-control",children:"Field-Level Access Control"}),"\n",(0,l.jsxs)(s.p,{children:["To enable field-level access control, set ",(0,l.jsx)(s.code,{children:"fieldLevelAccess"})," to ",(0,l.jsx)(s.code,{children:"true"})," in your rule. Then, you can specify permissions for individual fields using the ",(0,l.jsx)(s.code,{children:"fields"})," property."]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-typescript",children:'const rule: Rule = {\n  modelName: "Document",\n  access: {\n    create: true,\n    read: true,\n    update: true,\n    delete: false,\n  },\n  fieldLevelAccess: true,\n  fields: {\n    title: {\n      create: true,\n      read: true,\n      update: true,\n    },\n    content: {\n      create: true,\n      read: true,\n      update: false,\n    },\n  },\n};\n'})}),"\n",(0,l.jsxs)(s.p,{children:["In this example, users can update the ",(0,l.jsx)(s.code,{children:"title"})," field but not the ",(0,l.jsx)(s.code,{children:"content"})," field of the ",(0,l.jsx)(s.code,{children:"Document"})," model."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var l=n(6540);const r={},i=l.createContext(r);function o(e){const s=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),l.createElement(i.Provider,{value:s},e.children)}}}]);