"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7207],{6417:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=r(4848),s=r(8453);const o={sidebar_position:3,title:"Getting started with Express"},a=void 0,i={id:"express",title:"Getting started with Express",description:"This guide will walk you through setting up a Next.js application with @mercury-js/core, enabling you to quickly build a robust and secure API backend.",source:"@site/docs/express.md",sourceDirName:".",slug:"/express",permalink:"/mercury-js/docs/express",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/express.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Getting started with Express"},sidebar:"tutorialSidebar",previous:{title:"Getting started with Next.js",permalink:"/mercury-js/docs/nextjs"},next:{title:"Models",permalink:"/mercury-js/docs/model"}},c={},l=[];function p(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["This guide will walk you through setting up a Next.js application with ",(0,t.jsx)(n.code,{children:"@mercury-js/core"}),", enabling you to quickly build a robust and secure API backend."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// server.ts\nimport express from 'express';\nimport { ApolloServer } from '@apollo/server';\nimport { startStandaloneServer } from '@apollo/server/standalone';\nimport { makeExecutableSchema } from '@graphql-tools/schema';\nimport { applyMiddleware } from 'graphql-middleware';\nimport mercury from '@mercury-js/core';\nimport './models';\nimport './profiles';\nimport './hooks';\n\nmercury.connect(process.env.DB_URL || 'mongodb://localhost:27017/mercury');\n\nmercury.addGraphqlSchema(\n  `\n  type Query {\n    hello: String\n  }\n`,\n  {\n    Query: {\n      hello: (root: any, args: any, ctx: any, resolveInfo: any) => {\n        return 'Hello World!';\n      },\n    },\n  }\n);\n\nconst schema = applyMiddleware(\n  makeExecutableSchema({\n    typeDefs: mercury.typeDefs,\n    resolvers: mercury.resolvers as unknown as IResolvers<\n      any,\n      GraphQLResolveInfo\n    >[],\n  })\n);\n\nconst app = express();\n\nconst server = new ApolloServer({\n  schema,\n});\n\nconst { url } = await startStandaloneServer(server, {\n  context: async (req, res) => ({\n    ...req,\n    user: {\n      id: '1',\n      profile: 'Admin',\n    },\n  }),\n  listen: { port: 4000 },\n});\n\nconsole.log(`\ud83d\ude80  Server ready at: ${url}`);\n\napp.listen(3000, () => {\n  console.log('Express server listening on port 3000');\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);