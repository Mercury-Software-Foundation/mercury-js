"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3667],{2383:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=r(4848),o=r(8453);const t={sidebar_position:2,title:"Getting started with Next.js"},i=void 0,c={id:"nextjs",title:"Getting started with Next.js",description:"This guide will walk you through setting up a Next.js application with @mercury-js/core, enabling you to quickly build a robust and secure API backend.",source:"@site/docs/nextjs.md",sourceDirName:".",slug:"/nextjs",permalink:"/mercury-js/docs/nextjs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/nextjs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Getting started with Next.js"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/mercury-js/docs/intro"},next:{title:"Getting started with Express",permalink:"/mercury-js/docs/express"}},l={},a=[{value:"Project Structure",id:"project-structure",level:3},{value:"Setting Up the Server",id:"setting-up-the-server",level:3},{value:"Creating Models",id:"creating-models",level:3},{value:"Setting Up Profiles",id:"setting-up-profiles",level:3},{value:"Using Hooks",id:"using-hooks",level:3},{value:"Running the Server",id:"running-the-server",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This guide will walk you through setting up a Next.js application with ",(0,s.jsx)(n.code,{children:"@mercury-js/core"}),", enabling you to quickly build a robust and secure API backend."]}),"\n",(0,s.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsx)(n.p,{children:"Here's a recommended project structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"your-project\n\u251c\u2500\u2500 pages\n\u2502   \u2514\u2500\u2500 api\n\u2502       \u2514\u2500\u2500 [your-endpoint].ts\n\u2514\u2500\u2500 models\n    \u2514\u2500\u2500 [your-model].ts\n\u2514\u2500\u2500 profiles\n    \u2514\u2500\u2500 [your-profile].ts\n\u2514\u2500\u2500 hooks\n    \u2514\u2500\u2500 [your-hook].ts\n\u2514\u2500\u2500 next.config.js\n\u2514\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 package.json\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"pages"}),": Contains your Next.js routes, including your API endpoints."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"models"}),": Houses your Mongoose models."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"profiles"}),": Stores your access control profiles."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"hooks"}),": Holds pre- and post-event hooks for your models."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"next.config.js"}),": Configures your Next.js application."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"tsconfig.json"}),": Typescript configuration file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"package.json"}),": Contains project dependencies and scripts."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-the-server",children:"Setting Up the Server"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Install Dependencies:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @mercury-js/core @as-integrations/next @apollo/server @graphql-tools/schema graphql-middleware\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Create a Route (",(0,s.jsx)(n.code,{children:"pages/api/[your-endpoint].ts"}),"):"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// pages/api/[your-endpoint].ts\nimport { startServerAndCreateNextHandler } from '@as-integrations/next';\nimport mercury from '@mercury-js/core';\nimport { ApolloServer } from '@apollo/server';\nimport { makeExecutableSchema } from '@graphql-tools/schema';\nimport { applyMiddleware } from 'graphql-middleware';\nimport './models'; // Import your models\nimport './profiles'; // Import your profiles\nimport './hooks'; // Import your hooks\n\n// Connect to your MongoDB database\nmercury.connect(process.env.DB_URL || 'mongodb://localhost:27017/mercury');\n\n// Add additional GraphQL typedefs and resolvers (optional)\nmercury.addGraphqlSchema(\n  `\n    type Query {\n      hello: String\n    }\n  `,\n  {\n    Query: {\n      hello: (root: any, args: any, ctx: any, resolveInfo: any) => {\n        return 'Hello World!';\n      },\n    },\n  }\n);\n\n// Create the GraphQL schema\nconst schema = applyMiddleware(\n  makeExecutableSchema({\n    typeDefs: mercury.typeDefs,\n    resolvers: mercury.resolvers as unknown as IResolvers<\n      any,\n      GraphQLResolveInfo\n    >[],\n  })\n);\n\n// Initialize Apollo Server\nconst server = new ApolloServer({\n  schema,\n});\n\n// Create Next.js handler\nconst handler = startServerAndCreateNextHandler(server, {\n  context: async (req, res) => ({\n    ...req,\n    user: {\n      id: '1', // Example user ID\n      profile: 'Admin', // Example user profile\n    },\n  }),\n});\n\n// Export the handler for Next.js API routes\nexport { mercuryInstance } from './[your-endpoint].ts';\n\nexport async function GET(request: any) {\n  return handler(request);\n}\n\nexport async function POST(request: any) {\n  return handler(request);\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"creating-models",children:"Creating Models"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Create Model Files (",(0,s.jsx)(n.code,{children:"models/[your-model].ts"}),"):"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// models/User.model.ts\nimport mercury from '@mercury-js/core';\n\nexport const User = mercury.createModel(\n  'User',\n  {\n    name: {\n      type: 'string',\n    },\n    account: {\n      type: 'relationship',\n      ref: 'Account',\n    },\n  },\n  {}\n);\n\n// models/Account.model.ts\nimport mercury from '@mercury-js/core';\n\nexport const AccountSchema = {\n  name: {\n    type: 'string',\n  },\n  user: {\n    type: 'relationship',\n    ref: 'User',\n  },\n};\n\nexport const Account = mercury.createModel('Account', AccountSchema, {});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-profiles",children:"Setting Up Profiles"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Create Profile Files (",(0,s.jsx)(n.code,{children:"profiles/[your-profile].ts"}),"):"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// profiles/Admin.profile.ts\nimport mercury from '@mercury-js/core';\n\nconst rules = [\n  {\n    modelName: 'User',\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n  },\n  {\n    modelName: 'Account',\n    access: {\n      create: true,\n      read: true,\n      update: true,\n      delete: true,\n    },\n  },\n];\n\nexport const AdminProfile = mercury.createProfile('Admin', rules);\n\n// profiles/User.profile.ts\nimport mercury from '@mercury-js/core';\n\nconst rules = [\n  {\n    modelName: 'User',\n    access: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    modelName: 'Account',\n    access: {\n      create: false,\n      read: true,\n      update: false,\n      delete: false,\n    },\n    fieldLevelAccess: true,\n    fields: {\n      name: {\n        read: false,\n      },\n    },\n  },\n];\n\nexport const UserProfile = mercury.createProfile('User', rules);\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"using-hooks",children:"Using Hooks"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Create Hook Files (",(0,s.jsx)(n.code,{children:"hooks/[your-hook].ts"}),"):"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// hooks/User.hook.ts\nimport { hook } from '@mercury-js/core';\n\nhook.before('CREATE_USER_RECORD', async function (this: any) {\n  // Modify data before create\n  this.data.name = 'Test 1';\n});\n\nhook.after('CREATE_USER_RECORD', async function (this: any, args: any) {\n  console.log('AFTER CREATE hook', this);\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"running-the-server",children:"Running the Server"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Start the Development Server:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now, you have a Next.js application with a secure, efficient, and scalable API backend powered by ",(0,s.jsx)(n.code,{children:"@mercury-js/core"}),". You can access your GraphQL API by making requests to your endpoint, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://localhost:3000/api/[your-endpoint]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This structure can be modified and expanded to suit your specific needs, allowing you to build complex applications with ease and security using ",(0,s.jsx)(n.code,{children:"@mercury-js/core"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(6540);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);